name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5
  validate-openapi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Validate OpenAPI schema
        uses: "open-api-tools/openapi-validator-github-action@v1.2"
        with:
          "openapi-file": "failproof-llm/backend/api/openapi.json"
  validate-schemas:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Validate JSONL schemas
        run: make validate-schemas
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: make setup-backend
      - name: Lint
        run: make lint-backend
      - name: Type Check
        run: make type-check-backend
      - name: Test with Coverage
        run: make test-backend-cov
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: coverage-report
          path: coverage.xml

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        run: make setup-frontend
      - name: Lint
        run: make lint-frontend
      - name: Type Check
        run: make type-check-frontend
      - name: Test
        run: make test-frontend
  test-auth:
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run backend
        run: make dev &
      - name: Test auth
        run: |
          sleep 5
          # should fail
          curl -sS -f http://localhost:8000/api/v1/healthz && exit 1 || echo "401 as expected"
          # should pass
          curl -sS -f -H "X-API-Key: ${{ secrets.API_KEY }}" http://localhost:8000/api/v1/healthz > /dev/null